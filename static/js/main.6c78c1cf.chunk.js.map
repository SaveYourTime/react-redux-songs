{"version":3,"sources":["components/SongList.js","actions/index.js","components/SongDetail.js","components/App.js","const/songs.js","reducers/index.js","index.js"],"names":["connect","songs","selectSong","song","type","payload","props","className","map","title","key","onClick","renderSongs","selectedSong","duration","App","style","minHeight","React","Component","combineReducers","action","ReactDOM","render","store","createStore","reducers","document","getElementById"],"mappings":"kQA0BeA,eAFS,SAAC,GAAD,MAAgB,CAAEC,MAAlB,EAAGA,SAEa,CAAEC,WCxBhB,SAACC,GACzB,MAAO,CACLC,KAJuB,cAKvBC,QAASF,KDqBEH,EARE,SAACM,GAChB,OACE,wBAAIC,UAAU,+BAhBE,SAACD,GAAW,IACtBL,EAAsBK,EAAtBL,MAAOC,EAAeI,EAAfJ,WAEf,OAAOD,EAAMO,KAAI,SAACL,GAAU,IAClBM,EAAUN,EAAVM,MACR,OACE,wBAAIF,UAAU,4CAA4CG,IAAKD,GAC7D,0BAAMF,UAAU,WAAWE,GAC3B,4BAAQL,KAAK,SAASG,UAAU,8BAA8BI,QAAS,WAAQT,EAAWC,KAA1F,cAQyCS,CAAYN,OEE9CN,eAFS,SAAC,GAAD,MAAuB,CAAEa,aAAzB,EAAGA,gBAEZb,EAnBI,SAAC,GAAsB,IAApBa,EAAmB,EAAnBA,aACpB,OAAKA,EAQH,yBAAKN,UAAU,aACb,wBAAIA,UAAU,mBAAd,kBACA,wBAAIA,UAAU,kBAAd,UAAuCM,EAAaJ,OACpD,wBAAIF,UAAU,kBAAd,aAA0CM,EAAaC,WATvD,yBAAKP,UAAU,aACb,wBAAIA,UAAU,yBAAd,6BCiBOQ,E,iLAlBX,OACE,yBAAKR,UAAU,YAAYS,MAAO,CAAEC,UAAW,UAC7C,yBAAKV,UAAU,qBACb,wBAAIA,UAAU,eAAd,eACA,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,YACb,kBAAC,EAAD,OAEF,yBAAKA,UAAU,YACb,kBAAC,EAAD,c,GAXIW,IAAMC,WCeTlB,EAnBD,CACZ,CACEQ,MAAO,iBACPK,SAAU,SACT,CACDL,MAAO,UACPK,SAAU,SACT,CACDL,MAAO,iBACPK,SAAU,SACT,CACDL,MAAO,UACPK,SAAU,SACT,CACDL,MAAO,sBACPK,SAAU,UCCCM,cAAgB,CAAEnB,MAZZ,WACnB,OAAOA,GAW6CY,aAR1B,WAAkC,IAAjCA,EAAgC,uDAAjB,KAAMQ,EAAW,uCACnDjB,EAAkBiB,EAAlBjB,KAAMC,EAAYgB,EAAZhB,QACd,MJVyB,gBIUrBD,EACKC,EAEFQ,KCNTS,IAASC,OACP,kBAAC,IAAD,CAAUC,MAAOC,YAAYC,IAC3B,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.6c78c1cf.chunk.js","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { selectSong } from '../actions';\n\nconst renderSongs = (props) => {\n  const { songs, selectSong } = props;\n\n  return songs.map((song) => {\n    const { title } = song;\n    return (\n      <li className=\"list-group-item d-flex align-items-center\" key={title}>\n        <span className=\"mr-auto\">{title}</span>\n        <button type=\"button\" className=\"btn btn-primary float-right\" onClick={() => { selectSong(song) }}>Select</button>\n      </li>\n    )\n  });\n}\n\nconst SongList = (props) => {\n  return (\n    <ul className=\"list-group list-group-flush\">{renderSongs(props)}</ul>\n  );\n}\n\nconst mapStateToProps = ({ songs }) => ({ songs });\n\nexport default connect(mapStateToProps, { selectSong })(SongList);\n","export const SELECT_SONG = 'SELECT_SONG';\n\nexport const selectSong = (song) => {\n  return {\n    type: SELECT_SONG,\n    payload: song\n  }\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nconst SongDetail = ({ selectedSong }) => {\n  if (!selectedSong) {\n    return (\n      <div className=\"card-body\">\n        <h6 className=\"card-title text-muted\">Please select a song.</h6>\n      </div>\n    )\n  }\n  return (\n    <div className=\"card-body\">\n      <h5 className=\"card-title mb-4\">Now Playing...</h5>\n      <h6 className=\"text-secondary\">Title: {selectedSong.title}</h6>\n      <h6 className=\"text-secondary\">Duration: {selectedSong.duration}</h6>\n    </div>\n  );\n}\n\nconst mapStateToProps = ({ selectedSong }) => ({ selectedSong });\n\nexport default connect(mapStateToProps)(SongDetail);\n","import React from 'react';\nimport SongList from './SongList';\nimport SongDetail from './SongDetail';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"container\" style={{ minHeight: '100vh' }}>\n        <div className=\"card mb-3 mx-auto\">\n          <h5 className=\"card-header\">React Songs</h5>\n          <div className=\"row no-gutters\">\n            <div className=\"col-md-8\">\n              <SongList/>\n            </div>\n            <div className=\"col-md-4\">\n              <SongDetail/>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const songs = [\n  {\n    title: 'Work From Home',\n    duration: '03:35'\n  }, {\n    title: 'Perfect',\n    duration: '04:20'\n  }, {\n    title: 'Girls Like You',\n    duration: '03:16'\n  }, {\n    title: 'Starboy',\n    duration: '03:18'\n  }, {\n    title: 'Love Me Like You Do',\n    duration: '05:55'\n  },\n];\n\nexport default songs;\n","import { combineReducers } from 'redux';\nimport { SELECT_SONG} from '../actions';\nimport songs from '../const/songs';\n\nconst songsReducer = () => {\n  return songs;\n}\n\nconst selectedSongReducer = (selectedSong = null, action) => {\n  const { type, payload } = action;\n  if (type === SELECT_SONG) {\n    return payload;\n  }\n  return selectedSong;\n}\n\nexport default combineReducers({ songs: songsReducer, selectedSong: selectedSongReducer });\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport App from './components/App';\nimport reducers from './reducers/';\n\nReactDOM.render(\n  <Provider store={createStore(reducers)}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}